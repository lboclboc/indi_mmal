Steps for raspiyuv:

bcm_host_init

get_sensor_default: Open component MMAL_COMPONENT_DEFAULT_CAMERA_INFO gets info

create_camera_component:
    mmal_create_component(MMAL_COMPONENT_DEFAULT_CAMERA, &camera)
    mmal_port_parameter_set(camera->control,  MMAL_PARAMETER_CAMERA_NUM, 0)
    mmal_port_parameter_set_uint32(camera->control, MMAL_PARAMETER_CAMERA_CUSTOM_SENSOR_CONFIG, 0)
    mmal_port_enable(camera->control, default_camera_control_callback)
    mmal_port_parameter_set(camera->control, &cam_config.hdr);
		cam_config	@0xbefff350	MMAL_PARAMETER_CAMERA_CONFIG_T
			hdr	@0xbefff350	MMAL_PARAMETER_HEADER_T
				id	65557	uint32_t
				size	48	uint32_t
			max_stills_w	4056	uint32_t
			max_stills_h	3040	uint32_t
			stills_yuv422	0	uint32_t
			one_shot_stills	1	uint32_t
			max_preview_video_w	1024	uint32_t
			max_preview_video_h	768	uint32_t
			num_preview_video_frames	3	uint32_t
			stills_capture_circular_buffer_height	0	uint32_t
			fast_preview_resume	0	uint32_t
			use_stc_timestamp	MMAL_PARAM_TIMESTAMP_MODE_RESET_STC (2)	MMAL_PARAMETER_CAMERA_CONFIG_TIMESTAMP_MODE_T

! h채r s채tter jag camera_parametrar

! Jag s채tter raw.

    still_port->format:
		format	@0x364d0	MMAL_ES_FORMAT_T
			type	MMAL_ES_TYPE_VIDEO (3)	MMAL_ES_TYPE_T
			encoding	(hex) 33424752	MMAL_FOURCC_T
			encoding_variant	(hex) 0	MMAL_FOURCC_T
			es	@0x364f0	MMAL_ES_SPECIFIC_FORMAT_T
				audio	@0x364f0	MMAL_AUDIO_FORMAT_T
				video	@0x364f0	MMAL_VIDEO_FORMAT_T
					width	4064	uint32_t
					height	3040	uint32_t
					crop	@0x364f8	MMAL_RECT_T
						x	0	int32_t
						y	0	int32_t
						width	4056	int32_t
						height	3040	int32_t
					frame_rate	@0x36508	MMAL_RATIONAL_T
						num	0	int32_t
						den	1	int32_t
					par	@0x36510	MMAL_RATIONAL_T
						num	0	int32_t
						den	0	int32_t
					color_space	(hex) 0	MMAL_FOURCC_T
				subpicture	@0x364f0	MMAL_SUBPICTURE_FORMAT_T
! jag f책r 4056:		x_offset	4064	uint32_t
					y_offset	3040	uint32_t
			bitrate	0	uint32_t
			flags	0	uint32_t
			extradata_size	0	uint32_t
			extradata	0x0	uint8_t*

    mmal_port_format_commit(still_port);
    mmal_component_enable(camera);
    pool = mmal_port_pool_create(still_port, still_port->buffer_num, still_port->buffer_size);
    return

vcos_semaphore_create(&callback_data.complete_semaphore, "RaspiStill-sem", 0);
mmal_port_enable(camera_still_port, camera_buffer_callback);
mmal_port_parameter_set_uint32(state.camera_component->control, MMAL_PARAMETER_SHUTTER_SPEED, state.camera_parameters.shutter_speed)

num = mmal_queue_length(state.camera_pool->queue)
1 times:
    buffer = mmal_queue_get(state.camera_pool->queue)
    mmal_port_send_buffer(camera_still_port, buffer)

mmal_port_parameter_set_boolean(camera_still_port, MMAL_PARAMETER_CAPTURE, 1)
vcos_semaphore_wait(&callback_data.complete_semaphore)

// Closing down

vcos_semaphore_delete(&callback_data.complete_semaphore)

mmal_component_disable(state.camera_component)
mmal_component_destroy(state->camera_component)
